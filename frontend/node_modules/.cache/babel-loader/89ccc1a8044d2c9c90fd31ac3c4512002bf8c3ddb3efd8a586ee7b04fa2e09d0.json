{"ast":null,"code":"var _jsxFileName = \"/Users/wang-work/bioagen/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ChatSidebar from './components/ChatSidebar';\nimport ChatWindow from './components/ChatWindow';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [activeConversationId, setActiveConversationId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Load conversations from localStorage on mount\n  useEffect(() => {\n    const savedConversations = localStorage.getItem('bioagen_conversations');\n    if (savedConversations) {\n      const parsed = JSON.parse(savedConversations);\n      setConversations(parsed);\n      if (parsed.length > 0) {\n        setActiveConversationId(parsed[0].id);\n      }\n    }\n  }, []);\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    if (conversations.length > 0) {\n      localStorage.setItem('bioagen_conversations', JSON.stringify(conversations));\n    }\n  }, [conversations]);\n  const createNewConversation = () => {\n    const newConversation = {\n      id: Date.now().toString(),\n      title: '新对话',\n      messages: [],\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setActiveConversationId(newConversation.id);\n  };\n  const updateConversationTitle = (conversationId, title) => {\n    setConversations(prev => prev.map(conv => conv.id === conversationId ? {\n      ...conv,\n      title,\n      updatedAt: new Date().toISOString()\n    } : conv));\n  };\n  const addMessage = (conversationId, message) => {\n    setConversations(prev => prev.map(conv => conv.id === conversationId ? {\n      ...conv,\n      messages: [...conv.messages, message],\n      updatedAt: new Date().toISOString()\n    } : conv));\n  };\n  const deleteConversation = conversationId => {\n    setConversations(prev => {\n      const filtered = prev.filter(conv => conv.id !== conversationId);\n      if (activeConversationId === conversationId) {\n        setActiveConversationId(filtered.length > 0 ? filtered[0].id : null);\n      }\n      return filtered;\n    });\n  };\n  const activeConversation = conversations.find(conv => conv.id === activeConversationId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(ChatSidebar, {\n      conversations: conversations,\n      activeConversationId: activeConversationId,\n      onSelectConversation: setActiveConversationId,\n      onNewConversation: createNewConversation,\n      onDeleteConversation: deleteConversation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      conversation: activeConversation,\n      onSendMessage: addMessage,\n      onUpdateTitle: updateConversationTitle,\n      isLoading: isLoading,\n      setIsLoading: setIsLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YIZp0b1UDik5bS1zphEs8PvnLe0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatSidebar","ChatWindow","jsxDEV","_jsxDEV","App","_s","conversations","setConversations","activeConversationId","setActiveConversationId","isLoading","setIsLoading","savedConversations","localStorage","getItem","parsed","JSON","parse","length","id","setItem","stringify","createNewConversation","newConversation","Date","now","toString","title","messages","createdAt","toISOString","updatedAt","prev","updateConversationTitle","conversationId","map","conv","addMessage","message","deleteConversation","filtered","filter","activeConversation","find","className","children","onSelectConversation","onNewConversation","onDeleteConversation","fileName","_jsxFileName","lineNumber","columnNumber","conversation","onSendMessage","onUpdateTitle","_c","$RefreshReg$"],"sources":["/Users/wang-work/bioagen/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatSidebar from './components/ChatSidebar';\nimport ChatWindow from './components/ChatWindow';\nimport './App.css';\n\nfunction App() {\n  const [conversations, setConversations] = useState([]);\n  const [activeConversationId, setActiveConversationId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Load conversations from localStorage on mount\n  useEffect(() => {\n    const savedConversations = localStorage.getItem('bioagen_conversations');\n    if (savedConversations) {\n      const parsed = JSON.parse(savedConversations);\n      setConversations(parsed);\n      if (parsed.length > 0) {\n        setActiveConversationId(parsed[0].id);\n      }\n    }\n  }, []);\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    if (conversations.length > 0) {\n      localStorage.setItem('bioagen_conversations', JSON.stringify(conversations));\n    }\n  }, [conversations]);\n\n  const createNewConversation = () => {\n    const newConversation = {\n      id: Date.now().toString(),\n      title: '新对话',\n      messages: [],\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    \n    setConversations(prev => [newConversation, ...prev]);\n    setActiveConversationId(newConversation.id);\n  };\n\n  const updateConversationTitle = (conversationId, title) => {\n    setConversations(prev => prev.map(conv => \n      conv.id === conversationId \n        ? { ...conv, title, updatedAt: new Date().toISOString() }\n        : conv\n    ));\n  };\n\n  const addMessage = (conversationId, message) => {\n    setConversations(prev => prev.map(conv => \n      conv.id === conversationId \n        ? { \n            ...conv, \n            messages: [...conv.messages, message],\n            updatedAt: new Date().toISOString()\n          }\n        : conv\n    ));\n  };\n\n  const deleteConversation = (conversationId) => {\n    setConversations(prev => {\n      const filtered = prev.filter(conv => conv.id !== conversationId);\n      if (activeConversationId === conversationId) {\n        setActiveConversationId(filtered.length > 0 ? filtered[0].id : null);\n      }\n      return filtered;\n    });\n  };\n\n  const activeConversation = conversations.find(conv => conv.id === activeConversationId);\n\n  return (\n    <div className=\"app\">\n      <ChatSidebar\n        conversations={conversations}\n        activeConversationId={activeConversationId}\n        onSelectConversation={setActiveConversationId}\n        onNewConversation={createNewConversation}\n        onDeleteConversation={deleteConversation}\n      />\n      <ChatWindow\n        conversation={activeConversation}\n        onSendMessage={addMessage}\n        onUpdateTitle={updateConversationTitle}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}